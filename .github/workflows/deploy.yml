name: Test and Build for Netlify

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Test application
        run: |
          python -c "
          import sys
          import os

          # Test basic imports
          try:
              import flask
              print('‚úÖ Flask imported successfully')
          except ImportError as e:
              print(f'‚ùå Flask import failed: {e}')
              sys.exit(1)

          try:
              import google.generativeai
              print('‚úÖ Google Generative AI imported successfully')
          except ImportError as e:
              print(f'‚ùå Google Generative AI import failed: {e}')
              sys.exit(1)

          try:
              import requests
              print('‚úÖ Requests imported successfully')
          except ImportError as e:
              print(f'‚ùå Requests import failed: {e}')
              sys.exit(1)

          print('‚úÖ All critical imports successful')
          "
          echo "‚úÖ Basic tests passed"

      - name: Build success
        run: |
          echo "‚úÖ Build completed successfully!"
          echo "üìù To deploy to Netlify:"
          echo "1. Go to https://app.netlify.com"
          echo "2. Import this GitHub repository"
          echo "3. Deploy automatically"
          echo "üöÄ Netlify deployment ready!"

  # Uncomment and configure the deploy job below when you have Vercel secrets set up
  # deploy:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
  #
  #   steps:
  #   - uses: actions/checkout@v3
  #
  #   - name: Deploy to Vercel
  #     uses: amondnet/vercel-action@v25
  #     with:
  #       vercel-token: ${{ secrets.VERCEL_TOKEN }}
  #       vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
  #       vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
  #       vercel-args: '--prod'
